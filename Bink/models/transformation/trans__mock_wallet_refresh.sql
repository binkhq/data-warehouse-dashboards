{{config(
    materialized="table"
)}}

WITH users AS (
SELECT * FROM {{ref('src__fact_user')}}
)
  
,create_delete AS (
    SELECT
        USER_ID
        ,EVENT_DATE_TIME AS CREATED_DT
        ,LEAD(EVENT_TYPE) OVER(PARTITION BY USER_ID ORDER BY EVENT_DATE_TIME) AS NEXT_EVENT
        ,COALESCE(LEAD(EVENT_DATE_TIME) OVER(PARTITION BY USER_ID ORDER BY EVENT_DATE_TIME),CURRENT_TIMESTAMP()) AS DELETE_DT
    FROM users
    QUALIFY
        EVENT_TYPE = 'CREATED'
        AND (NEXT_EVENT IS NULL OR NEXT_EVENT = 'DELETED')
)

,generate_refresh_events AS (
    SELECT
        *
        ,DATEDIFF(day, CREATED_DT,DELETE_DT) AS DAY_DIFF
        ,CASE WHEN UNIFORM(0,10, RANDOM()) - 3 < 0 THEN 0 ELSE UNIFORM(0,7, RANDOM()) END AS NUM_REFRESHES
        ,CASE WHEN DAY_DIFF > 1 THEN CAST((DAY_DIFF/(NUM_REFRESHES+1)) -1 AS INT) END AS DAY_DIFF_1
        ,CASE WHEN NUM_REFRESHES>=2 AND DAY_DIFF_1 > 0 THEN DAY_DIFF_1 + DAY_DIFF_1 END AS DAY_DIFF_2
        ,CASE WHEN NUM_REFRESHES>=3 AND DAY_DIFF_1 > 0 THEN DAY_DIFF_1 + DAY_DIFF_2 END AS DAY_DIFF_3
        ,CASE WHEN NUM_REFRESHES>=4 AND DAY_DIFF_1 > 0 THEN DAY_DIFF_1 + DAY_DIFF_3 END AS DAY_DIFF_4
        ,CASE WHEN NUM_REFRESHES>=5 AND DAY_DIFF_1 > 0 THEN DAY_DIFF_1 + DAY_DIFF_4 END AS DAY_DIFF_5
        ,CASE WHEN NUM_REFRESHES > 0 THEN TIMEADD(h,UNIFORM(-8,8, RANDOM()),DATEADD(D,DAY_DIFF_1,CREATED_DT)) END AS REFRESH_DT_1
        ,TIMEADD(h,UNIFORM(-8,8, RANDOM()),DATEADD(D,DAY_DIFF_2,CREATED_DT)) AS REFRESH_DT_2
        ,TIMEADD(h,UNIFORM(-8,8, RANDOM()),DATEADD(D,DAY_DIFF_3,CREATED_DT)) AS REFRESH_DT_3
        ,TIMEADD(h,UNIFORM(-8,8, RANDOM()),DATEADD(D,DAY_DIFF_4,CREATED_DT)) AS REFRESH_DT_4
        ,TIMEADD(h,UNIFORM(-8,8, RANDOM()),DATEADD(D,DAY_DIFF_5,CREATED_DT)) AS REFRESH_DT_5
    FROM create_delete
)

,union_all_refresh_dts AS (
    SELECT USER_ID, REFRESH_DT_1 AS EVENT_DATE_TIME
    FROM generate_refresh_events
    WHERE REFRESH_DT_1 IS NOT NULL
    UNION ALL
    SELECT USER_ID, REFRESH_DT_2 AS EVENT_DATE_TIME
    FROM generate_refresh_events
    WHERE REFRESH_DT_2 IS NOT NULL
    UNION ALL
    SELECT USER_ID, REFRESH_DT_3 AS EVENT_DATE_TIME
    FROM generate_refresh_events
    WHERE REFRESH_DT_3 IS NOT NULL
    UNION ALL
    SELECT USER_ID, REFRESH_DT_4 AS EVENT_DATE_TIME
    FROM generate_refresh_events
    WHERE REFRESH_DT_4 IS NOT NULL
    UNION ALL
    SELECT USER_ID, REFRESH_DT_5 AS EVENT_DATE_TIME
    FROM generate_refresh_events
    WHERE REFRESH_DT_5 IS NOT NULL
)

SELECT *
FROM union_all_refresh_dts